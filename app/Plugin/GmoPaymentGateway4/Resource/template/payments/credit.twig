{#
Copyright(c) 2018 GMO Payment Gateway, Inc. All rights reserved.
http://www.gmo-pg.com/
#}
<script src="{{ Order.getGmoConfig.getJsServerUrl }}/ext/js/token.js"></script>
<script>
  // 指定文字列長のマスクを生成する
  function maskString(length) {
    var mask = "";
    for (i = 0; i < length; ++i, mask += '*');
    return mask;
  }

  // カード番号の末尾３桁を残しマスクする
  function maskCardNo(cardNo) {
    if (cardNo.length <= 3) {
      return cardNo;
    }

    var mask = maskString(cardNo.length - 3);
    return mask + cardNo.substr(-3, 3);
  }

  // セキュリティコードをクリアする
  function clearSecurityCode() {
    var securityCode = $('#shopping_order_security_code');
    if (securityCode.length) {
      securityCode.val('');
    }
  }

  // セキュリティコードをマスクする
  function maskSecurityCode() {
    var securityCode = $('#shopping_order_security_code');
    if (securityCode.length) {
      var value = securityCode.val();
      securityCode.val(maskString(value.length));
    }
  }

  // GMO-PG との通信完了後に呼び出される
  function execPurchase(response) {
    if (response.resultCode != 000) {
      window.alert("{{ 'gmo_payment_gateway.shopping.credit.error1'|trans }}");
      window.location.assign(window.location.href);
      return;
    }

    // クレジットトークンをセット
    $('#shopping_order_token').val(response.tokenObject.token);
    // マスクされたクレジットカードをセット
    var cardNo = $('#shopping_order_card_no').val();
    $('#shopping_order_mask_card_no').val(maskCardNo(cardNo));
    // クレジットカードをクリアする
    $('#shopping_order_card_no').val('');
    // セキュリティコードをマスクする
    maskSecurityCode();

    $('#shopping-form').submit();
  }

  // 入力内容のチェックとトークン取得
  function getToken() {
    var cardno = $('#shopping_order_card_no').val();
    if (cardno == "") {
      alert("{{ 'gmo_payment_gateway.shopping.credit.error2'|trans }}");
      clearSecurityCode();
      $('#shopping_order_card_no').focus();
      return false;
    }

    // カード番号の数値のみチェック
    var pat = /^\d*$/;
    if (!pat.test(cardno)) {
      alert("{{ 'gmo_payment_gateway.shopping.credit.error3'|trans }}");
      clearSecurityCode();
      $('#shopping_order_card_no').focus();
      return false;
    }

    // カード番号の7桁未満チェック
    if (cardno.length < 7) {
      alert("{{ 'gmo_payment_gateway.shopping.credit.error4'|trans }}");
      clearSecurityCode();
      $('#shopping_order_card_no').focus();
      return false;
    }

    var date = new Date();
    var year = date.getFullYear();
    year = String(year);
    year = year.substring(0,2);
    var expire = year + $('#shopping_order_expire_year').val()
                      + $('#shopping_order_expire_month').val();

    var card_name1 = $('#shopping_order_card_name1').val();
    if (card_name1 == "") {
      alert("{{ 'gmo_payment_gateway.shopping.credit.error5'|trans }}");
      clearSecurityCode();
      $('#shopping_order_card_name1').focus();
      return false;
    }
    // 名義人名：名の文字種チェック
    var pat = /^[0-9a-zA-Z]*$/;
    if (!pat.test(card_name1)) {
      alert("{{ 'gmo_payment_gateway.shopping.credit.error10'|trans }}");
      clearSecurityCode();
      $('#shopping_order_card_name1').focus();
      return false;
    }

    var card_name2 = $('#shopping_order_card_name2').val();
    if (card_name2 == "") {
      alert("{{ 'gmo_payment_gateway.shopping.credit.error6'|trans }}");
      clearSecurityCode();
      $('#shopping_order_card_name2').focus();
      return false;
    }
    // 名義人名：姓の文字種チェック
    var pat = /^[0-9a-zA-Z]*$/;
    if (!pat.test(card_name2)) {
      alert("{{ 'gmo_payment_gateway.shopping.credit.error11'|trans }}");
      clearSecurityCode();
      $('#shopping_order_card_name2').focus();
      return false;
    }

    var holdername = card_name1.concat(card_name2);

    var securityCode;
    var security_code = $('#shopping_order_security_code');
    if (security_code.length == 0 || security_code.val() == "") {
      if ("{{ Order.getGmoMethodConfig.use_securitycd }}" == "1" &&
          "{{ Order.getGmoMethodConfig.use_securitycd_option }}" == "0") {
        alert("{{ 'gmo_payment_gateway.shopping.credit.error7'|trans }}");
        security_code.focus();
        return false;
      }
      securityCode = '';
    } else {
      // セキュリティコードの数値のみチェック
      var pat = /^\d*$/;
      if (!pat.test(security_code.val())) {
        alert("{{ 'gmo_payment_gateway.shopping.credit.error8'|trans }}");
        clearSecurityCode();
        security_code.focus();
        return false;
      }

      // セキュリティコードの4桁以下チェック
      if (security_code.val().length > 4) {
        alert("{{ 'gmo_payment_gateway.shopping.credit.error9'|trans }}");
        clearSecurityCode();
        security_code.focus();
        return false;
      }

      securityCode = security_code.val();
    }

    Multipayment.init("{{ Order.getGmoConfig.getShopId }}");
    Multipayment.getToken({
      cardno: cardno,
      expire: expire,
      securitycode: securityCode,
      holdername: holdername
    }, execPurchase);

    loadingOverlay();

    return false;
  }

  $(function () {
    // クレジット入力フォームをお問い合わせ欄の直前に追加
    $('#gmo_payment_gateway_credit_form').insertBefore($('#shopping-form > div > div.ec-orderRole__detail > div.ec-orderConfirm'));

    // 注文するボタンクリック時
    $('#shopping-form > div > div.ec-orderRole__summary > div > div.ec-totalBox__btn > button').on('click', function (e) {
      if ($('#shopping_order_payment_type_0').prop('checked')) {
        // クレジットカード決済が選択されている場合はトークンを取得
        return getToken();
      } else {
        var val = $('input[name^=select_card_seq]:checked').val();
        if (typeof val === "undefined") {
          alert("{{ 'gmo_payment_gateway.shopping.credit.regist.note'|trans }}");
          return false;
        }
        return true;
      }
    });

    // クレジットカード決済を選択時
    $('#shopping_order_payment_type_0').on('click', function (e) {
      $('#shopping_order_payment_type_0_body').show();
      $('#shopping_order_payment_type_1_body').hide();
    });
    // 登録済みクレジットカード決済を選択時
    $('#shopping_order_payment_type_1').on('click', function (e) {
      $('#shopping_order_payment_type_1_body').show();
      $('#shopping_order_payment_type_0_body').hide();
    });
    // 登録済みクレジットカード決済でカードを選択した時
    $('input[name^=select_card_seq]').on('click', function (e) {
      $('#shopping_order_CardSeq').val($(this).val());
    });
    // 通常／登録済みの選択を復元する
    $('#shopping_order_payment_type_{{ Order.getGmoPaymentInput.payment_type }}').click();
    // 登録済みのカード選択状況を復元する
    var card_seq = $('#shopping_order_CardSeq').val();
    if (card_seq != "") {
      $('#select_card_seq_' + card_seq).click();
    }
  });
</script>
<style type="text/css">
  .align-middle {
    vertical-align: middle;
  }
  #gmo_payment_gateway_credit_form .form-control {
    width: auto;
    display: inline-block;
  }
  #gmo_payment_gateway_credit_form .dl_table {
    width: 100%;
    display: table;
  }
  #gmo_payment_gateway_credit_form .dl_table dl {
    display: table-row;
  }
  #gmo_payment_gateway_credit_form .dl_table dt,
  #gmo_payment_gateway_credit_form .dl_table dd {
    display: table-cell;
    font-weight: normal;
  }
  #shopping_order_payment_type_0_body dt {
    width: 30%;
  }
  #shopping_order_card_name1,
  #shopping_order_card_name2 {
    width: 200px;
    display: inline-block;
    margin-bottom: 5px;
  }
  #gmo_payment_gateway_credit_form .inline {
    display: inline-block;
  }
  #shopping_order_payment_type_1_body .dl_table {
    margin-top: 10px;
  }
  #shopping_order_payment_type_1_body dl {
    height: 40px;
  }
  #shopping_order_payment_type_1_body dt,
  #shopping_order_payment_type_1_body dd {
    border-bottom: 1px dotted #ccc;
  }
  .save_card_select {
    width: 10%;
  }
  .save_card_no {
    width: 35%;
  }
  .save_expire {
    width: 20%;
  }
  .save_holder_name {
    width: 35%;
  }
  .save_pay_methods {
    width: 20%;
  }
</style>
<div id="gmo_payment_gateway_credit_form" class="ec-orderPayment">
  {% if Order.getGmoConfig.getCardRegistFlg and Order.getCustomer is not null and Order.getCustomer.getGmoMember is not null and Order.getCustomer.getGmoMember.getCreditCards|length %}
  <div class="ec-rectHeading">
    <h2>{{ form_widget(form.payment_type[1]) }}</h2>
  </div>
  <div id="shopping_order_payment_type_1_body" style="display:none;">
    <p>{{ 'gmo_payment_gateway.shopping.credit.regist.note'|trans }}</p>
    {{ form_widget(form.CardSeq) }}
    <div class="dl_table">
      <dl>
	<dt class="align-middle text-center save_card_select">{{ 'gmo_payment_gateway.shopping.credit.regist.col1'|trans }}</dt>
	<dt class="align-middle text-left save_card_no">{{ 'gmo_payment_gateway.shopping.credit.regist.col2'|trans }}</dt>
	<dt class="align-middle text-center save_expire">{{ 'gmo_payment_gateway.shopping.credit.regist.col3'|trans }}</dt>
	<dt class="align-middle text-left save_holder_name">{{ 'gmo_payment_gateway.shopping.credit.regist.col4'|trans }}</dt>
      </dl>
      {% for card in Order.getCustomer.getGmoMember.getCreditCards %}
      <dl>
	<dd class="align-middle text-center">
	  <input type="radio" id="select_card_seq_{{ card.CardSeq }}" name="select_card_seq" value="{{ card.CardSeq }}" />
	</dd>
	<dd class="align-middle text-left">
	  {{ card.CardNo }}
	</dd>
	<dd class="align-middle text-center">
	  {{ card.expire_year }}{{ 'gmo_payment_gateway.shopping.credit.col2.year'|trans }}{{ card.expire_month }}{{ 'gmo_payment_gateway.shopping.credit.col2.month'|trans }}
	</dd>
	<dd class="align-middle text-left">
	  {{ card.HolderName }}
	</dd>
      </dl>
      {% endfor %}
    </div>

    <div class="dl_table">
      <dl>
	<dt class="save_pay_methods">{{ 'gmo_payment_gateway.shopping.credit.col5'|trans }}</dt>
	<dd>
	  <div class="ec-select">
	    {{ form_widget(form.credit_pay_methods2, { 'attr': { 'class': 'form-control'}}) }}
	    {{ form_errors(form.credit_pay_methods2) }}
	  </div>
	</dd>
      </dl>
    </div>

  </div>
  {% endif %}
  <div class="ec-rectHeading">
    <h2>{{ form_widget(form.payment_type[0]) }}</h2>
  </div>
  <div class="dl_table" id="shopping_order_payment_type_0_body">
    <dl>
      <dt>{{ 'gmo_payment_gateway.shopping.credit.col1'|trans }}</dt>
      <dd>
	<div class="ec-input">
	  {{ form_widget(form.card_no, { 'type': 'tel', 'attr': { 'class': 'form-control' }}) }}
	  {{ form_errors(form.card_no) }}
	  {{ form_widget(form.token) }}
	  {{ form_widget(form.mask_card_no) }}
	</div>
      </dd>
    </dl>
    <dl style="height:50px;">
      <dt>{{ 'gmo_payment_gateway.shopping.credit.col2'|trans }}</dt>
      <dd>
	<div class="ec-select">
	  {{ form_widget(form.expire_month, { 'attr': { 'class': 'form-control' }}) }}{{ 'gmo_payment_gateway.shopping.credit.col2.month'|trans }} /20 {{ form_widget(form.expire_year, { 'attr': { 'class': 'form-control' }}) }}{{ 'gmo_payment_gateway.shopping.credit.col2.year'|trans }}
	  {{ form_errors(form.expire_month) }}
	  {{ form_errors(form.expire_year) }}
	</div>
      </dd>
    </dl>
    <dl style="height:80px;">
      <dt>{{ 'gmo_payment_gateway.shopping.credit.col3'|trans }}</dt>
      <dd>
	<div class="ec-input inline">
	  {{ 'gmo_payment_gateway.shopping.credit.col3.first'|trans }}{{ form_widget(form.card_name1) }}
	  {{ form_errors(form.card_name1) }}
	</div>
	<div class="ec-input inline">
	  {{ 'gmo_payment_gateway.shopping.credit.col3.last'|trans }}{{ form_widget(form.card_name2) }}
	  {{ form_errors(form.card_name2) }}
	</div>
	<div class="inline">{{ 'gmo_payment_gateway.shopping.credit.col3.ex'|trans }}</div>
      </dd>
    </dl>
    {% if Order.getGmoMethodConfig.use_securitycd %}
    <dl style="height:115px;">
      <dt>{{ 'gmo_payment_gateway.shopping.credit.col4'|trans }}</dt>
      <dd>
	<div class="ec-input">
	  {{ form_widget(form.security_code, { 'type': 'tel', 'attr': { 'class': 'form-control' }}) }}{{ 'gmo_payment_gateway.shopping.credit.col4.ex'|trans }}
	  {{ form_errors(form.security_code) }}<br/>
	  {{ 'gmo_payment_gateway.shopping.credit.col4.note1'|trans }}
	</div>
      </dd>
    </dl>
    {% endif %}
    <dl style="height:50px;">
      <dt>{{ 'gmo_payment_gateway.shopping.credit.col5'|trans }}</dt>
      <dd>
	<div class="ec-select">
	  {{ form_widget(form.credit_pay_methods, { 'attr': { 'class': 'form-control' }}) }}
	  {{ form_errors(form.credit_pay_methods) }}
	</div>
      </dd>
    </dl>
    {% if Order.getGmoConfig.getCardRegistFlg and Order.getCustomer is not null %}
    <dl style="height:50px;">
      <dt>{{ 'gmo_payment_gateway.shopping.credit.col6'|trans }}</dt>
      <dd>
	{% if Order.getCustomer.getGmoMember is not null and Order.getCustomer.getGmoMember.getCreditCards|length >= eccube_config.gmo_payment_gateway_regist_card_num %}
	{{ 'gmo_payment_gateway.shopping.credit.col6.note4'|trans({ '%count%': eccube_config.gmo_payment_gateway_regist_card_num }) }}<br/>
	{{ 'gmo_payment_gateway.shopping.credit.col6.note5'|trans }}<br/>
	{{ 'gmo_payment_gateway.shopping.credit.col6.note6'|trans }}
	{% else %}
	<div class="ec-checkbox">
	  {{ form_widget(form.register_card) }}
	  {{ form_errors(form.register_card) }}
	</div>
	{{ 'gmo_payment_gateway.shopping.credit.col6.note1'|trans }}<br/>
	{{ 'gmo_payment_gateway.shopping.credit.col6.note2'|trans }}<br/>
	{{ 'gmo_payment_gateway.shopping.credit.col6.note3'|trans }}
	{% endif %}
      </dd>
    </dl>
    {% endif %}
  </div>
</div>
